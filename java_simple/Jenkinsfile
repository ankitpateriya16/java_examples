pipeline {
    agent any

    tools {
        maven 'mvn' 
    }
    options {
    timeout(time: 3, unit: 'MINUTES')  // Auto-abort after 15 min
    }
    environment {
        GIT_REPO = 'https://github.com/ankitpateriya16/hellodemo.git'
        DOCKER_IMAGE = 'pateriyaji/my-java-app'
        APP_PORT = '8089'
    }

    stages {
        stage('Build with Maven') {
            steps {
                echo '🔧 Building the Java application...'
                sh 'cd java_simple && mvn clean compile'
            }
        }

        stage('Run Tests') {
            steps {
                echo '🧪 Running tests...'
                sh 'cd java_simple && mvn test'
            }
        }

        stage('Package and Build Docker Image') {
            steps {
                echo '🐳 Building Docker image...'
                sh 'cd java_simple && mvn package -DskipTests'
                sh "cd java_simple && docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Run Docker Container') {
            steps {
                echo '🚀 Running Docker container...'
                // Stop old container if running
                sh 'cd java_simple && docker rm -f my-java-app || true'
                // Run new one
                sh "cd java_simple && docker run -d --name my-java-app -p ${APP_PORT}:1234 ${DOCKER_IMAGE}"
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully.'
        }
        failure {
            echo '❌ Pipeline failed.'
        }
        aborted {
             echo 'Build was aborted!'
             sh 'cd java_simple && killall java || true'  // Clean stuck processes
       }
    }
}
